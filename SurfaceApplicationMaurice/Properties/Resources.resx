<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessSelection" xml:space="preserve">
    <value>Access to your selection</value>
  </data>
  <data name="Addtoyourselection" xml:space="preserve">
    <value>Add to your selection</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Bags" xml:space="preserve">
    <value>Bags</value>
  </data>
  <data name="Blackandwhite" xml:space="preserve">
    <value>Black and white</value>
  </data>
  <data name="Chambernumber" xml:space="preserve">
    <value>Chamber number</value>
  </data>
  <data name="ChoicebyCategory" xml:space="preserve">
    <value>Choice by Category</value>
  </data>
  <data name="ChoicebyDate" xml:space="preserve">
    <value>Choice by Date</value>
  </data>
  <data name="ChooseFormatAndCD" xml:space="preserve">
    <value>Choose Format for photo and Order your CD</value>
  </data>
  <data name="Chooseyoureffect" xml:space="preserve">
    <value>Choose your Effect</value>
  </data>
  <data name="CloseInformation" xml:space="preserve">
    <value>Close Information</value>
  </data>
  <data name="Createaccount" xml:space="preserve">
    <value>Create Account</value>
  </data>
  <data name="CreateyourLogin" xml:space="preserve">
    <value>Create your login/password</value>
  </data>
  <data name="Deleteimage" xml:space="preserve">
    <value>Remove this Image</value>
  </data>
  <data name="Departuredate" xml:space="preserve">
    <value>Departure date</value>
  </data>
  <data name="Disconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="Doyourealywant" xml:space="preserve">
    <value>Do you realy want use this effect ?</value>
  </data>
  <data name="Errorcreatelogin" xml:space="preserve">
    <value>Error creating login</value>
  </data>
  <data name="Errorlogin" xml:space="preserve">
    <value>Error login</value>
  </data>
  <data name="FirstNameUser" xml:space="preserve">
    <value>firstname</value>
  </data>
  <data name="F_1523" xml:space="preserve">
    <value>15x23</value>
  </data>
  <data name="F_2030" xml:space="preserve">
    <value>20x30</value>
  </data>
  <data name="F_3045" xml:space="preserve">
    <value>30x45</value>
  </data>
  <data name="F_4060" xml:space="preserve">
    <value>40x60</value>
  </data>
  <data name="F_5075" xml:space="preserve">
    <value>50x75</value>
  </data>
  <data name="F_6095" xml:space="preserve">
    <value>60x95</value>
  </data>
  <data name="Gobackto" xml:space="preserve">
    <value>Go back to</value>
  </data>
  <data name="Imageaddedtoyourselection" xml:space="preserve">
    <value>Image added to your selection</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information english</value>
  </data>
  <data name="Keyenter" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="Keyerase" xml:space="preserve">
    <value>Erase</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="Loadingfinish" xml:space="preserve">
    <value>Loading finish</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Mug" xml:space="preserve">
    <value>Mug</value>
  </data>
  <data name="NameUser" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="OrderPictureCD" xml:space="preserve">
    <value>Order picutres on CD</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Pelluche" xml:space="preserve">
    <value>Teddy Bear</value>
  </data>
  <data name="Photo" xml:space="preserve">
    <value>Photos</value>
  </data>
  <data name="Pleaseenteryourlogin" xml:space="preserve">
    <value>Please enter your login/password</value>
  </data>
  <data name="PorteCles" xml:space="preserve">
    <value>Keys</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price:</value>
  </data>
  <data name="Root" xml:space="preserve">
    <value>Root</value>
  </data>
  <data name="Selection" xml:space="preserve">
    <value>Your Selection</value>
  </data>
  <data name="Sepia" xml:space="preserve">
    <value>Sepia</value>
  </data>
  <data name="Tapisdesouri" xml:space="preserve">
    <value>Mouse</value>
  </data>
  <data name="TeeShirt" xml:space="preserve">
    <value>Tee Shirt</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Are you sure ?</value>
  </data>
  <data name="MinimumPhotoOnCD" xml:space="preserve">
    <value>You should have 10 pictures minimum</value>
  </data>
  <data name="ChoiceACategory" xml:space="preserve">
    <value>Choose a category</value>
  </data>
  <data name="TouchTwoTimeToSelect" xml:space="preserve">
    <value>Touch two times the picture to select it</value>
  </data>
  <data name="Format" xml:space="preserve">
    <value>                             Format                                          </value>
  </data>
  <data name="FormatPhotoToPrint" xml:space="preserve">
    <value>Photos à imprimer</value>
  </data>
  <data name="NumberImage" xml:space="preserve">
    <value>Number of picture</value>
  </data>
  <data name="Objet" xml:space="preserve">
    <value>              Object              </value>
  </data>
  <data name="OrderOnCD" xml:space="preserve">
    <value>       Order On CD          </value>
  </data>
  <data name="PhotoOnCD" xml:space="preserve">
    <value>Photos sur le CD</value>
  </data>
  <data name="PhotoOnOjbet" xml:space="preserve">
    <value>Photos sur produit dérivé</value>
  </data>
  <data name="Price1" xml:space="preserve">
    <value>Prix</value>
  </data>
  <data name="PricePromotional" xml:space="preserve">
    <value>Promo on print price</value>
  </data>
  <data name="Reduction" xml:space="preserve">
    <value>Réduction</value>
  </data>
  <data name="AllPhotoOnCD" xml:space="preserve">
    <value>All photo on CD</value>
  </data>
  <data name="DeleteImageSource" xml:space="preserve">
    <value>Remove source picture?</value>
  </data>
  <data name="NoPhotoOnCD" xml:space="preserve">
    <value>No CD photo</value>
  </data>
  <data name="OnlyOnCD" xml:space="preserve">
    <value>Photo on CD whitout printing</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Validate" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Montant" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="WhatCaddyFor" xml:space="preserve">
    <value>Manage your command</value>
  </data>
  <data name="WhatCaddyFor2" xml:space="preserve">
    <value>for this photo</value>
  </data>
  <data name="backToGallery" xml:space="preserve">
    <value>Retournez à la gallerie</value>
  </data>
  <data name="PhotoOnBook" xml:space="preserve">
    <value>Nb Page of Book</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="HowManyPages" xml:space="preserve">
    <value>How many pages do you want ?</value>
  </data>
  <data name="OrderBook" xml:space="preserve">
    <value>Do you want a picture book ?</value>
  </data>
  <data name="AllPhotoOnBook" xml:space="preserve">
    <value>All your picture on book</value>
  </data>
  <data name="MinimumPhotoOnBook" xml:space="preserve">
    <value>You must have 20 pages </value>
  </data>
  <data name="FillEntry" xml:space="preserve">
    <value>Please fill entries</value>
  </data>
</root>